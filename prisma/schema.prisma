// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  organizations Organization[] 
  userChats      UserChat[]
  products    Product[] 
}

model Organization {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  country    String
  currency   String
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  events     Event[]
}

model Event {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  org         Organization @relation(fields: [orgId], references: [id])
  orgId       String       @db.ObjectId
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Chat {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  messages   Message[]
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  userChats  UserChat[]
}

model UserChat {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  userId  String  @db.ObjectId
  chatId  String  @db.ObjectId

  user    User    @relation(fields: [userId], references: [id])
  chat    Chat    @relation(fields: [chatId], references: [id])

  @@unique([userId, chatId])
}

model Message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  chatId    String   @db.ObjectId
  senderId  String   @db.ObjectId
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chat      Chat     @relation(fields: [chatId], references: [id])
}


model Product {
  id          String   @id @map("_id") @default(auto()) @db.ObjectId
  name        String
  description String
  price       Float

  userId      String   @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
}